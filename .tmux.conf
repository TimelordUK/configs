##h#######################
#  Configuration
###########################

# use 256 xterm for pretty colors. This enables same colors from iTerm2 within tmux.
# This is recommended in neovim :healthcheck
set-option -sa terminal-features ',screen-256color:RGB'
set -g default-terminal "tmux-256color"
# set -ga terminal-overrides ",xterm-256color:Tc"

set-option -g default-shell /usr/local/bin/zsh
set-option -g focus-events on

# increase scroll-back history
set -g history-limit 5000

# use vim key bindings
setw -g mode-keys vi

# disable mouse
set -g mouse off

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1 instead of 0
#set -g base-index 1

# start pane index at 1 instead of 0
#setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# enable pbcopy and pbpaste
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md
# set-option -g default-command "reattach-to-user-namespace -l zsh"

###########################
#  Key Bindings
###########################

# Tmux prefix
# Current solution is to keep the default
# and have term map C-; to C-b. This is the nicest
# bind I've found and this is the only way to enable it in tmux
#unbind C-b
#set -g prefix C-a
#bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config!"

# Copy vim style
# create 'v' alias for selecting text
#bind Escape copy-mode
#bind C-[ copy-mode
#bind -T copy-mode-vi 'v' send -X begin-selection
# copy with 'enter' or 'y' and send to mac os clipboard: http://goo.gl/2Bfn8
#unbind -T copy-mode-vi Enter
#bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
#bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# paste
#bind p paste-buffer
# paste from system clipboard MacOS
#bind C-v run \"tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer"

# panes: window splitting
#unbind %
#bind | split-window -h
#unbind '"'
#bind - split-window -v

# Switch panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

## Quickly switch panes
unbind ^J
bind ^J select-pane -t :.+

############################
## Status Bar
############################

# enable UTF-8 support in status bar
#set -gq status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
#set -g status-justify centre

# show session, window, pane in left status bar
#set -g status-left-length 40
#set -g status-left '#[fg=green] #S #[fg=yellow]#I/#[fg=cyan]#P '

# show hostname, date, tim 100
#set -g status-right '#(battery -t) #[fg=cyan] %d %b %R '

# update status bar info
#set -g status-interval 60

###########################
# Colors
###########################

# color status bar
#set -g status-style fg=white,bg=colour235
# color of message bar
#set -g message-style fg=white,bold,bg=green

# highlight current window
#setw -g window-status-style fg=cyan,bg=colour235
#setw -g window-status-current-style fg=white,bold,bg=red

# set color of active pane
#set -g pane-border-style fg=colour240,bg=black
#set -g pane-active-border-style fg=green,bg=black

# dim non active panes (don't like it much)
# setw -g window-style fg=colour240,bg=colour235
# setw -g window-active-style fg=white,bg=black


###########################
# Plugins
###########################
# Setup TPM first
#   1) Check instructions on GitHub
# To install plugins:
#   1) Add plugin down here
#   2) Prefix + I to install plugin
# To update plugins:
#   1) Prefix + U
# To remove plugins:
#   1) Remove line down here
#   2) Prefix + ALT + U

# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
# Add more plugins below this line
# Plugin to save and restore tmux sessions after restart
# * Save with: prefix + Ctrl-s
# * Restore with: prefix + Ctlr-r
#set -g @plugin 'tmux-plugins/tmux-resurrect'
# restore vim and nvim sessions as well
# for vim
#  set -g @resurrect-strategy-vim 'session'
# for neovim
#  set -g @resurrect-strategy-nvim 'session'
#set -g @plugin 'tmux-plugins/tmux-continuum'
# Automatic restore
#  set -g @continuum-restore 'on'

# Make navigation between tmux and vim panes seamlessly
#set -g @plugin 'christoomey/vim-tmux-navigator'

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.

bind-key -n M-g display-popup -E -w 80% -h 80% "lazygit"

bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Run Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'

# set -g @plugin 'catppuccin/tmux'
# set -g @plugin "arcticicestudio/nord-tmux"
#set -g @catppuccin_flavour 'latte'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

#set -g @catppuccin_window_left_separator ""
#set -g @catppuccin_window_right_separator " "
#set -g @catppuccin_window_middle_separator " █"
#set -g @catppuccin_window_number_position "right"

#set -g @catppuccin_window_default_fill "number"
#set -g @catppuccin_window_default_text "#W"

#set -g @catppuccin_window_current_fill "number"
#set -g @catppuccin_window_current_text "#W"

#set -g @catppuccin_status_modules_right "session host date_time"
#set -g @catppuccin_status_left_separator  " "
#set -g @catppuccin_status_right_separator ""
#set -g @catppuccin_status_fill "icon"
#set -g @catppuccin_status_connect_separator "no"

#set -g @catppuccin_directory_text "#{pane_current_path}"
#set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M:%S"
# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'dark' # or 'light'

#-#-# start_of_ranger_tmux_config #-#-#
bind-key Bspace run-shell -b '/home/me/miniconda3/envs/krypton/bin/python -m ranger_tmux.drop'
#-#-# end_of_ranger_tmux_config #-#-#

# pip install ranger-tmux
# python -m ranger_tmux.drop

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# xc	Change the current working directory in the other pane to the directory in ranger
# xd	Change ranger's current directory to the directory of the other pane
# xs	Toggle syncing of ranger's current directory to the other pane
# xt	Toggle tracking of the other pane's working directory to tmux
# xw	Toggle opening files in a new tmux window
# xi	Toggle setting the tmux window's title to "ranger" when ranger is running
# xe	Open the selected file with rifle in a new tmux window
# x|	Split ranger's current tmux pane vertially
# x-	Split ranger's current tmux pane horizontally
# xh	Adds the dropdown shortcut to ~/.tmux.conf
